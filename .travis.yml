language: python
python:
  - "3.9"
services:
  - docker
install:
  - pip install -r requirements.txt
stages:
  - name: build
    script:
      - echo "Iniciando build..."
      - # Comandos para realizar o build
      - echo "Build concluído com sucesso!"
    after_script:
      - export TELEGRAM_SH_PATH=$TRAVIS_BUILD_DIR/telegram.sh
      - chmod +x $TELEGRAM_SH_PATH
      - if [ $TRAVIS_TEST_RESULT -eq 0 ]; then bash $TELEGRAM_SH_PATH "Build succeeded!"; else bash $TELEGRAM_SH_PATH "Build failed!"; fi
  - name: test
    script:
      - echo "Iniciando teste..."
      - # Comandos para realizar o teste
      - echo "Teste concluído com sucesso!"
    after_script:
      - export TELEGRAM_SH_PATH=$TRAVIS_BUILD_DIR/telegram.sh
      - chmod +x $TELEGRAM_SH_PATH
      - if [ $TRAVIS_TEST_RESULT -eq 0 ]; then bash $TELEGRAM_SH_PATH "Test succeeded!"; else bash $TELEGRAM_SH_PATH "Test failed!"; fi
  - name: deploy
    if: type = push AND branch = main
    script:
      - echo "Iniciando deploy..."
      - # Comandos para realizar o deploy
      - echo "Deploy concluído com sucesso!"
    after_script:
      - export TELEGRAM_SH_PATH=$TRAVIS_BUILD_DIR/telegram.sh
      - chmod +x $TELEGRAM_SH_PATH
      - if [ $TRAVIS_TEST_RESULT -eq 0 ]; then bash $TELEGRAM_SH_PATH "Deployment succeeded!"; else bash $TELEGRAM_SH_PATH "Deployment failed!"; fi
    cleanup: false
  - name: notify-pull-request
    if: type = pull_request
    script:
      - export TELEGRAM_SH_PATH=$TRAVIS_BUILD_DIR/telegram.sh
      - chmod +x $TELEGRAM_SH_PATH
      - echo "Iniciando o envio da mensagem para o Telegram..."
      - bash $TELEGRAM_SH_PATH "Pull request created or updated!"
      - echo "Mensagem enviada com sucesso para o Telegram!"
    after_script:
      - export TELEGRAM_SH_PATH=$TRAVIS_BUILD_DIR/telegram.sh
      - chmod +x $TELEGRAM_SH_PATH
      - if [ $TRAVIS_TEST_RESULT -eq 0 ]; then bash $TELEGRAM_SH_PATH "Pull request notification succeeded!"; else bash $TELEGRAM_SH_PATH "Pull request notification failed!"; fi
